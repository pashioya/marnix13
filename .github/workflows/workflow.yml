name: CI/CD Pipeline
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Static analysis and linting
  lint-and-typecheck:
    name: üîç Lint & TypeCheck
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install

      - name: TypeScript type checking
        run: pnpm run typecheck

      - name: ESLint linting
        run: pnpm run lint

      - name: Prettier formatting check
        run: pnpm run format:fix

  # Build test
  build:
    name: üèóÔ∏è Build
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install

      - name: Build all packages
        run: pnpm run build
        env:
          NEXT_PUBLIC_SITE_URL: https://marnix13.com

  # E2E tests with Playwright
  e2e-tests:
    name: üé≠ E2E Tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build]
    # Remove the conditional check to always run E2E tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install

      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test --filter web-e2e | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: pnpm exec ./apps/e2e/node_modules/.bin/playwright install --with-deps

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Start Supabase Server
        run: pnpm run supabase:web:start -- -x studio,migra,deno-relay,pgadmin-schema-diff,imgproxy,logflare

      - name: Build Next.js for testing
        run: pnpm --filter web build:test
        env:
          NEXT_PUBLIC_SITE_URL: https://example.com

      - name: Start Next.js Server
        run: pnpm --filter web start:test &

      - name: Wait for server to be ready
        run: |
          echo "Waiting for server to start..."
          timeout 60 bash -c 'until curl -f http://localhost:3000/api/health 2>/dev/null; do sleep 2; done' || {
            echo "Server failed to start within 60 seconds"
            exit 1
          }
          
      - name: Run Playwright E2E tests
        run: |
          echo "Running Playwright tests..."
          pnpm run test

      - name: Run Supabase database tests
        run: pnpm --filter web supabase:test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/e2e/playwright-report/
          retention-days: 7

  # Summary job to check overall status
  tests-summary:
    name: ‚úÖ Tests Summary
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build, e2e-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.lint-and-typecheck.result }}" == "success" && "${{ needs.build.result }}" == "success" && "${{ needs.e2e-tests.result }}" == "success" ]]; then  
            echo "‚úÖ All critical tests passed!"
            exit 0
          else
            echo "‚ùå Some tests failed:"
            echo "Lint & TypeCheck: ${{ needs.lint-and-typecheck.result }}"
            echo "Build: ${{ needs.build.result }}"
            echo "E2E Tests: ${{ needs.e2e-tests.result }}"
            exit 1
          fi